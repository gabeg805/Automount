#!/bin/bash
# ------------------------------------------------------------------------------
# 
# Name: automnt
# Author: Gabe Gonzalez
# 
# Brief: Automatically mount a USB device when it is plugged in.
# 
# ------------------------------------------------------------------------------

##
# Project name.
##
PROJECT="${0##*/}"

##
# Files/directories.
##
MOUNT_FILE="/proc/mounts"
DEV_BLOCK_DIR="/dev/block"
SYSTEMD_DIR="${HOME}/.config/systemd/user"

##
# Options.
##
INSTALL=
UNINSTALL=
INIT=
RUN=

##
# Exit statuses.
##
EXIT_AUTOMNT_DEVICE_ALREADY_MOUNTED=10

##
# Main.
##
main()
{
    if [ $# -eq 0 ]
    then
        usage
        exit 0
    fi

	# Options
    local short="hr"
    local long="help,install,uninstall,run"
	local args=

    # Parse options
    args=$(getopt -o "${short}" --long "${long}" --name "${PROJECT}" \
				-- "${@}")
    if [ $? -ne 0 ]
    then
        usage
        exit 1
    fi
    eval set -- "${args}"

    while true
    do
        case "${1}" in
            -h|--help)
                usage
                exit 0
                ;;
            --install)
                INSTALL=true
                ;;
            --uninstall)
                UNINSTALL=true
                ;;
            -r|--run)
                RUN=true
                ;;
            *)
                break
                ;;
        esac
        shift
    done

    if [ -n "${INSTALL}" ]
    then
        automnt_install
    elif [ -n "${UNINSTALL}" ]
    then
        automnt_uninstall
    elif [ -n "${RUN}" ]
    then
        automnt_run
    else
		:
	fi

    return $?
}

##
# Print program usage.
##
usage()
{
    echo "Usage: ${PROJECT} [options]"
    echo 
    echo "Options:"
    echo "    -h, --help"
    echo "        Print program usage."
    echo
    echo "    --install"
    echo "        Install USB automount program."
    echo 
    echo "    --uninstall"
    echo "        Uninstall USB automount program."
    echo 
    echo "    -r, --run"
    echo "        Search for new USB devices and mount them."
}

##
# Automatically mount detected USB devices.
##
automnt_run()
{
    local timeout=10
    local b=
    sleep ${timeout}
    while [ ${timeout} -gt 0 ]
    do
        for b in "${DEV_BLOCK_DIR}"/*
        do
            if automnt_is_new_device "${b}" "${timeout}" \
                    && automnt_is_removable_device "${b}" \
                    && ! automnt_is_mounted "${b}"
            then
                automnt_mount "${b}"
            fi
        done
        timeout=$[ ${timeout} - 1 ]
        sleep 1
    done
}

##
# Install the systemd config files and enable the service.
##
automnt_install()
{
    local dir=$(dirname "$(readlink -e "${0}")")
    echo ":: Installing '${PROJECT}'."
    mkdir -pv "${SYSTEMD_DIR}"
    cp -av "${dir}/systemd/"* "${SYSTEMD_DIR}"
    sed -i "s@ExecStart=@ExecStart=${dir}\/${PROJECT} --run@" \
        "${SYSTEMD_DIR}/${PROJECT}.service"
    systemctl --user enable "${PROJECT}.path"
    systemctl --user start "${PROJECT}.path"
}

##
# Uninstall the auto mounter systemd files.
##
automnt_uninstall()
{
    echo ":: Uninstalling '${PROJECT}'."
    systemctl --user disable "${PROJECT}.path"
    systemctl --user stop "${PROJECT}.path"
    systemctl --user stop "${PROJECT}.service"
    rm -fv "${SYSTEMD_DIR}/${PROJECT}."{path,service}
}

##
# Mount the device.
##
automnt_mount()
{
    local block="${1}"
    if automnt_is_mounted "${block}"
    then
        local dev=$(automnt_get_device_name "${block}")
        echo "${PROJECT}: Device '${dev}' already mounted." 1>&2
        return ${EXIT_AUTOMNT_DEVICE_ALREADY_MOUNTED}
    fi
    udisks --mount "${block}"
}

##
# Return the device name from the block name.
##
automnt_get_device_name()
{
    readlink -e "${1}"
}

##
# Check if device has recently been inserted.
##
automnt_is_new_device()
{
    local block="${1}"
    local timeallowed="${2}"
    local modsec=$(stat -c %Z "${block}")
    local nowsec=$(date +"%s")
    local diffsec=$[ ${nowsec} - ${modsec} ]
    if [ ${diffsec} -le ${timeallowed} ]
    then
        return 0
    else
        return 1
    fi
}

##
# Check if the block device is mounted.
##
automnt_is_mounted()
{
    local block="${1}"
    local name=$(automnt_get_device_name "${block}")
    local count=$(grep -c "${name}" "${MOUNT_FILE}")
    if [ ${count} -gt 0 ]
    then
        return 0
    else
        return 1
    fi
}

##
# Check if device is a removable device.
##
automnt_is_removable_device()
{
    local block="${1}"
    if automnt_is_partition "${block}" \
            && ! automnt_is_disk_device "${block}"
    then
        return 0
    else
        return 1
    fi
}

##
# Check if device belongs to disk.
##
automnt_is_disk_device()
{
    local block="${1}"
    local name=$(automnt_get_device_name "${block}")
    if [ "${name/sda/}" != "${name}" ]
    then
        return 0
    else
        return 1
    fi
}

##
# Check if the block device is a partition.
##
automnt_is_partition()
{
    local block="${1}"
    local name=$(automnt_get_device_name "${block}")
    local index=$[ ${#name} - 1 ]
    local char="${name:${index}:1}"
    case "${char}" in
        [0-9]) return 0 ;;
        *) return 1 ;;
    esac
}

##
# Run script.
##
main "${@}"
